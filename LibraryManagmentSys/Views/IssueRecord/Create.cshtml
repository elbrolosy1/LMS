@model BLL__Buisness_Logic_Layer_.Dtos.IssueRecordDto.ReadIssueRecord

@{
    ViewData["Title"] = "Issue Details";
}

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <!-- User Information Card -->
            <div class="card shadow-lg rounded-4 mb-4 border-0">
                <div class="card-header bg-gradient-primary text-white rounded-top-4">
                    <div class="d-flex justify-content-between align-items-center">
                        <h3 class="h5 mb-0"><i class="fas fa-user-circle me-2"></i>User Information</h3>
                        <span class="badge bg-light text-dark">
                            <i class="fas fa-hashtag me-1"></i> @Model.Id
                        </span>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <div class="d-flex align-items-center">
                                <div class="icon-shape bg-gradient-info text-white rounded-circle me-3">
                                    <i class="fas fa-user"></i>
                                </div>
                                <div>
                                    <h6 class="mb-0 text-muted">USER NAME</h6>
                                    <p class="h5 mb-0 fw-bold">@Model.UserFullName</p>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-6 mb-3">
                            <div class="d-flex align-items-center">
                                <div class="icon-shape bg-gradient-info text-white rounded-circle me-3">
                                    <i class="fas fa-calendar-alt"></i>
                                </div>
                                <div>
                                    <h6 class="mb-0 text-muted">ISSUE DATE</h6>
                                    <p class="h5 mb-0 fw-bold">@Model.IssueDate.ToString("dd MMM yyyy")</p>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="d-flex align-items-center">
                                <div class="icon-shape bg-gradient-info text-white rounded-circle me-3">
                                    <i class="fas fa-calendar-check"></i>
                                </div>
                                <div>
                                    <h6 class="mb-0 text-muted">RETURN DATE</h6>
                                    <p class="h5 mb-0 fw-bold">
                                        @(Model.ReturnDate?.ToString("dd MMM yyyy") ??
                                            "<span class='text-danger'>Not Returned</span>")
                                    </p>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="d-flex align-items-center">
                                <div class="icon-shape bg-gradient-info text-white rounded-circle me-3">
                                    <i class="fas fa-clock"></i>
                                </div>
                                <div>
                                    <h6 class="mb-0 text-muted">STATUS</h6>
                                    <p class="h5 mb-0 fw-bold">
                                        @if (Model.ReturnDate.HasValue)
                                        {
                                            <span class="badge bg-success">Returned</span>
                                        }
                                        else if (Model.ReturnDate < DateTime.Now)
                                        {
                                            <span class="badge bg-danger">Overdue</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-warning text-dark">Borrowed</span>
                                        }
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Books Information Card -->
            <div class="card shadow-lg rounded-4 border-0">
                <div class="card-header bg-gradient-info text-white rounded-top-4">
                    <h3 class="h5 mb-0"><i class="fas fa-book me-2"></i>Borrowed Books (@Model.BookTitles.Count)</h3>
                </div>
                <div class="card-body p-0">
                    @if (Model.BookTitles.Any())
                    {
                        <div class="list-group list-group-flush">
                            @foreach (var (bookTitle, index) in Model.BookTitles.Select((title, i) => (title, i)))
                            {
                                <div class="list-group-item d-flex justify-content-between align-items-center py-3 hover-effect">
                                    <div class="d-flex align-items-center">
                                        <div class="icon-shape bg-gradient-primary text-white rounded-circle me-3">
                                            <i class="fas fa-book-open"></i>
                                        </div>
                                        <div>
                                            <h6 class="mb-0">@bookTitle</h6>
                                            <small class="text-muted">Book ID: @Model.BookIds[index]</small>
                                        </div>
                                    </div>
                                    <a href="@Url.Action("Details", "Book", new { id = Model.BookIds[index] })"
                                       class="btn btn-sm btn-outline-primary">
                                        <i class="fas fa-external-link-alt"></i> View Book
                                    </a>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-warning m-4">
                            <i class="fas fa-exclamation-circle me-2"></i> No books found for this issue record.
                        </div>
                    }
                </div>
            </div>

            <!-- Action Buttons -->
            <div class="d-flex justify-content-between mt-4">
                <a asp-action="Index" class="btn btn-outline-secondary rounded-pill">
                    <i class="fas fa-arrow-left me-1"></i> Back to List
                </a>
                <div>
                    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary rounded-pill me-2">
                        <i class="fas fa-edit me-1"></i> Edit
                    </a>
                    <a href="javascript:;" class="btn btn-outline-danger rounded-pill js-delete"
                       data-id="@Model.Id"
                       data-url="@Url.Action("Delete", "IssueRecord", new { id = Model.Id })">
                        <i class="fas fa-trash-alt me-1"></i> Delete
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .bg-gradient-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }

        .bg-gradient-info {
            background: linear-gradient(135deg, #11cdef 0%, #1171ef 100%);
        }

        .icon-shape {
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .hover-effect {
            transition: all 0.3s ease;
        }

            .hover-effect:hover {
                background-color: #f8f9fa;
                transform: translateX(5px);
            }

        .rounded-4 {
            border-radius: 1rem !important;
        }

        .rounded-pill {
            border-radius: 50rem !important;
        }

        .list-group-item {
            border-left: 0;
            border-right: 0;
        }
    </style>
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />

    <script>
        $(document).ready(function () {
            $('.js-delete').on('click', function (e) {
                e.preventDefault();
                var btn = $(this);

                const swal = Swal.mixin({
                    customClass: {
                        confirmButton: 'btn btn-danger mx-2',
                        cancelButton: 'btn btn-secondary'
                    },
                    buttonsStyling: false
                });

                swal.fire({
                    title: 'Delete Issue Record?',
                    text: "Are you sure you want to delete this record? This action cannot be undone!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, delete it!',
                    cancelButtonText: 'Cancel',
                    reverseButtons: true,
                    backdrop: `
                                rgba(0,0,0,0.7)
                                url("/images/trash-animation.gif")
                                left top
                                no-repeat
                            `
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: btn.data('url'),
                            method: 'DELETE',
                            success: function () {
                                swal.fire({
                                    title: 'Deleted!',
                                    text: 'The issue record has been deleted successfully.',
                                    icon: 'success',
                                    timer: 1500,
                                    showConfirmButton: false,
                                    background: 'linear-gradient(310deg, #141727, #3A416F)',
                                    color: 'white'
                                }).then(() => {
                                    window.location.href = '@Url.Action("Index")';
                                });
                            },
                            error: function () {
                                swal.fire({
                                    title: 'Error!',
                                    text: 'Something went wrong while deleting the record.',
                                    icon: 'error',
                                    background: 'linear-gradient(310deg, #141727, #3A416F)',
                                    color: 'white'
                                });
                            }
                        });
                    }
                });
            });
        });
    </script>
}